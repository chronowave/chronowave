// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: proto/ssql.proto

package ssql

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AttributeType int32

const (
	AttributeType_DOUBLE AttributeType = 0
	AttributeType_INT    AttributeType = 1
	AttributeType_TEXT   AttributeType = 2
)

// Enum value maps for AttributeType.
var (
	AttributeType_name = map[int32]string{
		0: "DOUBLE",
		1: "INT",
		2: "TEXT",
	}
	AttributeType_value = map[string]int32{
		"DOUBLE": 0,
		"INT":    1,
		"TEXT":   2,
	}
)

func (x AttributeType) Enum() *AttributeType {
	p := new(AttributeType)
	*p = x
	return p
}

func (x AttributeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttributeType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ssql_proto_enumTypes[0].Descriptor()
}

func (AttributeType) Type() protoreflect.EnumType {
	return &file_proto_ssql_proto_enumTypes[0]
}

func (x AttributeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttributeType.Descriptor instead.
func (AttributeType) EnumDescriptor() ([]byte, []int) {
	return file_proto_ssql_proto_rawDescGZIP(), []int{0}
}

type Function_Func int32

const (
	Function_AVG   Function_Func = 0
	Function_SUM   Function_Func = 1
	Function_MIN   Function_Func = 2
	Function_MAX   Function_Func = 3
	Function_COUNT Function_Func = 4
	Function_PCTL  Function_Func = 5
	Function_PART  Function_Func = 6
)

// Enum value maps for Function_Func.
var (
	Function_Func_name = map[int32]string{
		0: "AVG",
		1: "SUM",
		2: "MIN",
		3: "MAX",
		4: "COUNT",
		5: "PCTL",
		6: "PART",
	}
	Function_Func_value = map[string]int32{
		"AVG":   0,
		"SUM":   1,
		"MIN":   2,
		"MAX":   3,
		"COUNT": 4,
		"PCTL":  5,
		"PART":  6,
	}
)

func (x Function_Func) Enum() *Function_Func {
	p := new(Function_Func)
	*p = x
	return p
}

func (x Function_Func) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Function_Func) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ssql_proto_enumTypes[1].Descriptor()
}

func (Function_Func) Type() protoreflect.EnumType {
	return &file_proto_ssql_proto_enumTypes[1]
}

func (x Function_Func) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Function_Func.Descriptor instead.
func (Function_Func) EnumDescriptor() ([]byte, []int) {
	return file_proto_ssql_proto_rawDescGZIP(), []int{1, 0}
}

type OrderBy_Direction int32

const (
	OrderBy_ASC  OrderBy_Direction = 0
	OrderBy_DESC OrderBy_Direction = 1
)

// Enum value maps for OrderBy_Direction.
var (
	OrderBy_Direction_name = map[int32]string{
		0: "ASC",
		1: "DESC",
	}
	OrderBy_Direction_value = map[string]int32{
		"ASC":  0,
		"DESC": 1,
	}
)

func (x OrderBy_Direction) Enum() *OrderBy_Direction {
	p := new(OrderBy_Direction)
	*p = x
	return p
}

func (x OrderBy_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderBy_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ssql_proto_enumTypes[2].Descriptor()
}

func (OrderBy_Direction) Type() protoreflect.EnumType {
	return &file_proto_ssql_proto_enumTypes[2]
}

func (x OrderBy_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderBy_Direction.Descriptor instead.
func (OrderBy_Direction) EnumDescriptor() ([]byte, []int) {
	return file_proto_ssql_proto_rawDescGZIP(), []int{12, 0}
}

type Statement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Find    []*Attribute      `protobuf:"bytes,1,rep,name=find,proto3" json:"find,omitempty"`
	From    *From             `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Where   []*Expr           `protobuf:"bytes,3,rep,name=where,proto3" json:"where,omitempty"`
	OrderBy []*OrderBy        `protobuf:"bytes,4,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Limit   uint32            `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Path    map[string]string `protobuf:"bytes,6,rep,name=path,proto3" json:"path,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Statement) Reset() {
	*x = Statement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ssql_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statement) ProtoMessage() {}

func (x *Statement) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ssql_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statement.ProtoReflect.Descriptor instead.
func (*Statement) Descriptor() ([]byte, []int) {
	return file_proto_ssql_proto_rawDescGZIP(), []int{0}
}

func (x *Statement) GetFind() []*Attribute {
	if x != nil {
		return x.Find
	}
	return nil
}

func (x *Statement) GetFrom() *From {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Statement) GetWhere() []*Expr {
	if x != nil {
		return x.Where
	}
	return nil
}

func (x *Statement) GetOrderBy() []*OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *Statement) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Statement) GetPath() map[string]string {
	if x != nil {
		return x.Path
	}
	return nil
}

type Function struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name Function_Func `protobuf:"varint,1,opt,name=name,proto3,enum=Function_Func" json:"name,omitempty"`
	// Types that are assignable to Parameter:
	//	*Function_Double
	//	*Function_Int
	Parameter isFunction_Parameter `protobuf_oneof:"parameter"`
}

func (x *Function) Reset() {
	*x = Function{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ssql_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Function) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Function) ProtoMessage() {}

func (x *Function) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ssql_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Function.ProtoReflect.Descriptor instead.
func (*Function) Descriptor() ([]byte, []int) {
	return file_proto_ssql_proto_rawDescGZIP(), []int{1}
}

func (x *Function) GetName() Function_Func {
	if x != nil {
		return x.Name
	}
	return Function_AVG
}

func (m *Function) GetParameter() isFunction_Parameter {
	if m != nil {
		return m.Parameter
	}
	return nil
}

func (x *Function) GetDouble() float64 {
	if x, ok := x.GetParameter().(*Function_Double); ok {
		return x.Double
	}
	return 0
}

func (x *Function) GetInt() int64 {
	if x, ok := x.GetParameter().(*Function_Int); ok {
		return x.Int
	}
	return 0
}

type isFunction_Parameter interface {
	isFunction_Parameter()
}

type Function_Double struct {
	Double float64 `protobuf:"fixed64,2,opt,name=double,proto3,oneof"`
}

type Function_Int struct {
	Int int64 `protobuf:"varint,3,opt,name=int,proto3,oneof"`
}

func (*Function_Double) isFunction_Parameter() {}

func (*Function_Int) isFunction_Parameter() {}

type Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  AttributeType `protobuf:"varint,1,opt,name=type,proto3,enum=AttributeType" json:"type,omitempty"`
	Name  string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group bool          `protobuf:"varint,3,opt,name=group,proto3" json:"group,omitempty"`
	Func  *Function     `protobuf:"bytes,4,opt,name=func,proto3" json:"func,omitempty"`
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ssql_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ssql_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_proto_ssql_proto_rawDescGZIP(), []int{2}
}

func (x *Attribute) GetType() AttributeType {
	if x != nil {
		return x.Type
	}
	return AttributeType_DOUBLE
}

func (x *Attribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attribute) GetGroup() bool {
	if x != nil {
		return x.Group
	}
	return false
}

func (x *Attribute) GetFunc() *Function {
	if x != nil {
		return x.Func
	}
	return nil
}

type From struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Or     bool     `protobuf:"varint,1,opt,name=or,proto3" json:"or,omitempty"`
	Labels []string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *From) Reset() {
	*x = From{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ssql_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *From) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*From) ProtoMessage() {}

func (x *From) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ssql_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use From.ProtoReflect.Descriptor instead.
func (*From) Descriptor() ([]byte, []int) {
	return file_proto_ssql_proto_rawDescGZIP(), []int{3}
}

func (x *From) GetOr() bool {
	if x != nil {
		return x.Or
	}
	return false
}

func (x *From) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type Expr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Field:
	//	*Expr_Or
	//	*Expr_Tuple
	Field isExpr_Field `protobuf_oneof:"field"`
}

func (x *Expr) Reset() {
	*x = Expr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ssql_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Expr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expr) ProtoMessage() {}

func (x *Expr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ssql_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expr.ProtoReflect.Descriptor instead.
func (*Expr) Descriptor() ([]byte, []int) {
	return file_proto_ssql_proto_rawDescGZIP(), []int{4}
}

func (m *Expr) GetField() isExpr_Field {
	if m != nil {
		return m.Field
	}
	return nil
}

func (x *Expr) GetOr() *OR {
	if x, ok := x.GetField().(*Expr_Or); ok {
		return x.Or
	}
	return nil
}

func (x *Expr) GetTuple() *Tuple {
	if x, ok := x.GetField().(*Expr_Tuple); ok {
		return x.Tuple
	}
	return nil
}

type isExpr_Field interface {
	isExpr_Field()
}

type Expr_Or struct {
	Or *OR `protobuf:"bytes,1,opt,name=or,proto3,oneof"`
}

type Expr_Tuple struct {
	Tuple *Tuple `protobuf:"bytes,2,opt,name=tuple,proto3,oneof"`
}

func (*Expr_Or) isExpr_Field() {}

func (*Expr_Tuple) isExpr_Field() {}

type OR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expr []*Expr `protobuf:"bytes,1,rep,name=expr,proto3" json:"expr,omitempty"`
}

func (x *OR) Reset() {
	*x = OR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ssql_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OR) ProtoMessage() {}

func (x *OR) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ssql_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OR.ProtoReflect.Descriptor instead.
func (*OR) Descriptor() ([]byte, []int) {
	return file_proto_ssql_proto_rawDescGZIP(), []int{5}
}

func (x *OR) GetExpr() []*Expr {
	if x != nil {
		return x.Expr
	}
	return nil
}

type Tuple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Types that are assignable to Predicate:
	//	*Tuple_Nested
	//	*Tuple_Timeframe
	//	*Tuple_Key
	//	*Tuple_Between
	//	*Tuple_Contain
	//	*Tuple_Exist
	//	*Tuple_Eq
	//	*Tuple_Neq
	//	*Tuple_Gt
	//	*Tuple_Ge
	//	*Tuple_Lt
	//	*Tuple_Le
	//	*Tuple_In
	Predicate isTuple_Predicate `protobuf_oneof:"predicate"`
}

func (x *Tuple) Reset() {
	*x = Tuple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ssql_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tuple) ProtoMessage() {}

func (x *Tuple) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ssql_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tuple.ProtoReflect.Descriptor instead.
func (*Tuple) Descriptor() ([]byte, []int) {
	return file_proto_ssql_proto_rawDescGZIP(), []int{6}
}

func (x *Tuple) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tuple) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (m *Tuple) GetPredicate() isTuple_Predicate {
	if m != nil {
		return m.Predicate
	}
	return nil
}

func (x *Tuple) GetNested() *Nested {
	if x, ok := x.GetPredicate().(*Tuple_Nested); ok {
		return x.Nested
	}
	return nil
}

func (x *Tuple) GetTimeframe() *Binary {
	if x, ok := x.GetPredicate().(*Tuple_Timeframe); ok {
		return x.Timeframe
	}
	return nil
}

func (x *Tuple) GetKey() *Unary {
	if x, ok := x.GetPredicate().(*Tuple_Key); ok {
		return x.Key
	}
	return nil
}

func (x *Tuple) GetBetween() *Binary {
	if x, ok := x.GetPredicate().(*Tuple_Between); ok {
		return x.Between
	}
	return nil
}

func (x *Tuple) GetContain() *Unary {
	if x, ok := x.GetPredicate().(*Tuple_Contain); ok {
		return x.Contain
	}
	return nil
}

func (x *Tuple) GetExist() *Unary {
	if x, ok := x.GetPredicate().(*Tuple_Exist); ok {
		return x.Exist
	}
	return nil
}

func (x *Tuple) GetEq() *Unary {
	if x, ok := x.GetPredicate().(*Tuple_Eq); ok {
		return x.Eq
	}
	return nil
}

func (x *Tuple) GetNeq() *Unary {
	if x, ok := x.GetPredicate().(*Tuple_Neq); ok {
		return x.Neq
	}
	return nil
}

func (x *Tuple) GetGt() *Unary {
	if x, ok := x.GetPredicate().(*Tuple_Gt); ok {
		return x.Gt
	}
	return nil
}

func (x *Tuple) GetGe() *Unary {
	if x, ok := x.GetPredicate().(*Tuple_Ge); ok {
		return x.Ge
	}
	return nil
}

func (x *Tuple) GetLt() *Unary {
	if x, ok := x.GetPredicate().(*Tuple_Lt); ok {
		return x.Lt
	}
	return nil
}

func (x *Tuple) GetLe() *Unary {
	if x, ok := x.GetPredicate().(*Tuple_Le); ok {
		return x.Le
	}
	return nil
}

func (x *Tuple) GetIn() *Unary {
	if x, ok := x.GetPredicate().(*Tuple_In); ok {
		return x.In
	}
	return nil
}

type isTuple_Predicate interface {
	isTuple_Predicate()
}

type Tuple_Nested struct {
	Nested *Nested `protobuf:"bytes,3,opt,name=nested,proto3,oneof"`
}

type Tuple_Timeframe struct {
	Timeframe *Binary `protobuf:"bytes,4,opt,name=timeframe,proto3,oneof"`
}

type Tuple_Key struct {
	Key *Unary `protobuf:"bytes,5,opt,name=key,proto3,oneof"`
}

type Tuple_Between struct {
	Between *Binary `protobuf:"bytes,6,opt,name=between,proto3,oneof"`
}

type Tuple_Contain struct {
	Contain *Unary `protobuf:"bytes,7,opt,name=contain,proto3,oneof"`
}

type Tuple_Exist struct {
	Exist *Unary `protobuf:"bytes,8,opt,name=exist,proto3,oneof"`
}

type Tuple_Eq struct {
	Eq *Unary `protobuf:"bytes,9,opt,name=eq,proto3,oneof"`
}

type Tuple_Neq struct {
	Neq *Unary `protobuf:"bytes,10,opt,name=neq,proto3,oneof"`
}

type Tuple_Gt struct {
	Gt *Unary `protobuf:"bytes,11,opt,name=gt,proto3,oneof"`
}

type Tuple_Ge struct {
	Ge *Unary `protobuf:"bytes,12,opt,name=ge,proto3,oneof"`
}

type Tuple_Lt struct {
	Lt *Unary `protobuf:"bytes,13,opt,name=lt,proto3,oneof"`
}

type Tuple_Le struct {
	Le *Unary `protobuf:"bytes,14,opt,name=le,proto3,oneof"`
}

type Tuple_In struct {
	In *Unary `protobuf:"bytes,15,opt,name=in,proto3,oneof"`
}

func (*Tuple_Nested) isTuple_Predicate() {}

func (*Tuple_Timeframe) isTuple_Predicate() {}

func (*Tuple_Key) isTuple_Predicate() {}

func (*Tuple_Between) isTuple_Predicate() {}

func (*Tuple_Contain) isTuple_Predicate() {}

func (*Tuple_Exist) isTuple_Predicate() {}

func (*Tuple_Eq) isTuple_Predicate() {}

func (*Tuple_Neq) isTuple_Predicate() {}

func (*Tuple_Gt) isTuple_Predicate() {}

func (*Tuple_Ge) isTuple_Predicate() {}

func (*Tuple_Lt) isTuple_Predicate() {}

func (*Tuple_Le) isTuple_Predicate() {}

func (*Tuple_In) isTuple_Predicate() {}

type Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expr []*Expr `protobuf:"bytes,1,rep,name=expr,proto3" json:"expr,omitempty"`
}

func (x *Nested) Reset() {
	*x = Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ssql_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nested) ProtoMessage() {}

func (x *Nested) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ssql_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nested.ProtoReflect.Descriptor instead.
func (*Nested) Descriptor() ([]byte, []int) {
	return file_proto_ssql_proto_rawDescGZIP(), []int{7}
}

func (x *Nested) GetExpr() []*Expr {
	if x != nil {
		return x.Expr
	}
	return nil
}

type Unary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	First *Operand `protobuf:"bytes,1,opt,name=first,proto3" json:"first,omitempty"`
}

func (x *Unary) Reset() {
	*x = Unary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ssql_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unary) ProtoMessage() {}

func (x *Unary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ssql_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unary.ProtoReflect.Descriptor instead.
func (*Unary) Descriptor() ([]byte, []int) {
	return file_proto_ssql_proto_rawDescGZIP(), []int{8}
}

func (x *Unary) GetFirst() *Operand {
	if x != nil {
		return x.First
	}
	return nil
}

type Binary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	First  *Operand `protobuf:"bytes,1,opt,name=first,proto3" json:"first,omitempty"`
	Second *Operand `protobuf:"bytes,2,opt,name=second,proto3" json:"second,omitempty"`
}

func (x *Binary) Reset() {
	*x = Binary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ssql_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Binary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Binary) ProtoMessage() {}

func (x *Binary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ssql_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Binary.ProtoReflect.Descriptor instead.
func (*Binary) Descriptor() ([]byte, []int) {
	return file_proto_ssql_proto_rawDescGZIP(), []int{9}
}

func (x *Binary) GetFirst() *Operand {
	if x != nil {
		return x.First
	}
	return nil
}

func (x *Binary) GetSecond() *Operand {
	if x != nil {
		return x.Second
	}
	return nil
}

type Operand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*Operand_Double
	//	*Operand_Int
	//	*Operand_Text
	//	*Operand_List
	Value isOperand_Value `protobuf_oneof:"value"`
}

func (x *Operand) Reset() {
	*x = Operand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ssql_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operand) ProtoMessage() {}

func (x *Operand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ssql_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operand.ProtoReflect.Descriptor instead.
func (*Operand) Descriptor() ([]byte, []int) {
	return file_proto_ssql_proto_rawDescGZIP(), []int{10}
}

func (m *Operand) GetValue() isOperand_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Operand) GetDouble() float64 {
	if x, ok := x.GetValue().(*Operand_Double); ok {
		return x.Double
	}
	return 0
}

func (x *Operand) GetInt() int64 {
	if x, ok := x.GetValue().(*Operand_Int); ok {
		return x.Int
	}
	return 0
}

func (x *Operand) GetText() string {
	if x, ok := x.GetValue().(*Operand_Text); ok {
		return x.Text
	}
	return ""
}

func (x *Operand) GetList() *List {
	if x, ok := x.GetValue().(*Operand_List); ok {
		return x.List
	}
	return nil
}

type isOperand_Value interface {
	isOperand_Value()
}

type Operand_Double struct {
	Double float64 `protobuf:"fixed64,1,opt,name=double,proto3,oneof"`
}

type Operand_Int struct {
	Int int64 `protobuf:"varint,2,opt,name=int,proto3,oneof"`
}

type Operand_Text struct {
	Text string `protobuf:"bytes,3,opt,name=text,proto3,oneof"`
}

type Operand_List struct {
	List *List `protobuf:"bytes,4,opt,name=list,proto3,oneof"`
}

func (*Operand_Double) isOperand_Value() {}

func (*Operand_Int) isOperand_Value() {}

func (*Operand_Text) isOperand_Value() {}

func (*Operand_List) isOperand_Value() {}

type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text   []string  `protobuf:"bytes,1,rep,name=text,proto3" json:"text,omitempty"`
	Int    []int64   `protobuf:"varint,2,rep,packed,name=int,proto3" json:"int,omitempty"`
	Double []float64 `protobuf:"fixed64,3,rep,packed,name=double,proto3" json:"double,omitempty"`
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ssql_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ssql_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_proto_ssql_proto_rawDescGZIP(), []int{11}
}

func (x *List) GetText() []string {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *List) GetInt() []int64 {
	if x != nil {
		return x.Int
	}
	return nil
}

func (x *List) GetDouble() []float64 {
	if x != nil {
		return x.Double
	}
	return nil
}

type OrderBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Direction OrderBy_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=OrderBy_Direction" json:"direction,omitempty"`
}

func (x *OrderBy) Reset() {
	*x = OrderBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ssql_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBy) ProtoMessage() {}

func (x *OrderBy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ssql_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBy.ProtoReflect.Descriptor instead.
func (*OrderBy) Descriptor() ([]byte, []int) {
	return file_proto_ssql_proto_rawDescGZIP(), []int{12}
}

func (x *OrderBy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderBy) GetDirection() OrderBy_Direction {
	if x != nil {
		return x.Direction
	}
	return OrderBy_ASC
}

var File_proto_ssql_proto protoreflect.FileDescriptor

var file_proto_ssql_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x73, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x81, 0x02, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x04, 0x66, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6e, 0x64,
	0x12, 0x19, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x05, 0x77,
	0x68, 0x65, 0x72, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x45, 0x78, 0x70,
	0x72, 0x52, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61,
	0x74, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x37, 0x0a,
	0x09, 0x50, 0x61, 0x74, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb4, 0x01, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0e, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x75, 0x6e,
	0x63, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x03, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x03, 0x69, 0x6e, 0x74, 0x22, 0x49, 0x0a, 0x04, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x56, 0x47, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x55, 0x4d, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x58, 0x10,
	0x03, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04,
	0x50, 0x43, 0x54, 0x4c, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x41, 0x52, 0x54, 0x10, 0x06,
	0x42, 0x0b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x22, 0x78, 0x0a,
	0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x04, 0x66, 0x75, 0x6e, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x22, 0x2e, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x46, 0x0a, 0x04, 0x45, 0x78, 0x70, 0x72, 0x12,
	0x15, 0x0a, 0x02, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x03, 0x2e, 0x4f, 0x52,
	0x48, 0x00, 0x52, 0x02, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x05, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22,
	0x1f, 0x0a, 0x02, 0x4f, 0x52, 0x12, 0x19, 0x0a, 0x04, 0x65, 0x78, 0x70, 0x72, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x52, 0x04, 0x65, 0x78, 0x70, 0x72,
	0x22, 0xc5, 0x03, 0x0a, 0x05, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x21, 0x0a, 0x06, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x06, 0x6e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x55, 0x6e,
	0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x07, 0x62, 0x65,
	0x74, 0x77, 0x65, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x07, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x12,
	0x22, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x05, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x65, 0x71, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x02, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x03, 0x6e, 0x65, 0x71, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x55, 0x6e, 0x61,
	0x72, 0x79, 0x48, 0x00, 0x52, 0x03, 0x6e, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x02, 0x67, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52,
	0x02, 0x67, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x02, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x02, 0x6c, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x55, 0x6e, 0x61, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x02, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x6c, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x02, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e,
	0x55, 0x6e, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x02, 0x69, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x70,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x23, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x65, 0x78, 0x70, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x52, 0x04, 0x65, 0x78, 0x70, 0x72, 0x22, 0x27, 0x0a,
	0x05, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x52,
	0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x06, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x12, 0x1e, 0x0a, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x06, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x22, 0x73, 0x0a, 0x07, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a,
	0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52,
	0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x03, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x1b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x07,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x22, 0x6f, 0x0a,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1e,
	0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x41,
	0x53, 0x43, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x01, 0x2a, 0x2e,
	0x0a, 0x0d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x49,
	0x4e, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x02, 0x42, 0x0b,
	0x5a, 0x09, 0x73, 0x73, 0x71, 0x6c, 0x3b, 0x73, 0x73, 0x71, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_ssql_proto_rawDescOnce sync.Once
	file_proto_ssql_proto_rawDescData = file_proto_ssql_proto_rawDesc
)

func file_proto_ssql_proto_rawDescGZIP() []byte {
	file_proto_ssql_proto_rawDescOnce.Do(func() {
		file_proto_ssql_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_ssql_proto_rawDescData)
	})
	return file_proto_ssql_proto_rawDescData
}

var file_proto_ssql_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_ssql_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_ssql_proto_goTypes = []interface{}{
	(AttributeType)(0),     // 0: AttributeType
	(Function_Func)(0),     // 1: Function.Func
	(OrderBy_Direction)(0), // 2: OrderBy.Direction
	(*Statement)(nil),      // 3: Statement
	(*Function)(nil),       // 4: Function
	(*Attribute)(nil),      // 5: Attribute
	(*From)(nil),           // 6: From
	(*Expr)(nil),           // 7: Expr
	(*OR)(nil),             // 8: OR
	(*Tuple)(nil),          // 9: Tuple
	(*Nested)(nil),         // 10: Nested
	(*Unary)(nil),          // 11: Unary
	(*Binary)(nil),         // 12: Binary
	(*Operand)(nil),        // 13: Operand
	(*List)(nil),           // 14: List
	(*OrderBy)(nil),        // 15: OrderBy
	nil,                    // 16: Statement.PathEntry
}
var file_proto_ssql_proto_depIdxs = []int32{
	5,  // 0: Statement.find:type_name -> Attribute
	6,  // 1: Statement.from:type_name -> From
	7,  // 2: Statement.where:type_name -> Expr
	15, // 3: Statement.order_by:type_name -> OrderBy
	16, // 4: Statement.path:type_name -> Statement.PathEntry
	1,  // 5: Function.name:type_name -> Function.Func
	0,  // 6: Attribute.type:type_name -> AttributeType
	4,  // 7: Attribute.func:type_name -> Function
	8,  // 8: Expr.or:type_name -> OR
	9,  // 9: Expr.tuple:type_name -> Tuple
	7,  // 10: OR.expr:type_name -> Expr
	10, // 11: Tuple.nested:type_name -> Nested
	12, // 12: Tuple.timeframe:type_name -> Binary
	11, // 13: Tuple.key:type_name -> Unary
	12, // 14: Tuple.between:type_name -> Binary
	11, // 15: Tuple.contain:type_name -> Unary
	11, // 16: Tuple.exist:type_name -> Unary
	11, // 17: Tuple.eq:type_name -> Unary
	11, // 18: Tuple.neq:type_name -> Unary
	11, // 19: Tuple.gt:type_name -> Unary
	11, // 20: Tuple.ge:type_name -> Unary
	11, // 21: Tuple.lt:type_name -> Unary
	11, // 22: Tuple.le:type_name -> Unary
	11, // 23: Tuple.in:type_name -> Unary
	7,  // 24: Nested.expr:type_name -> Expr
	13, // 25: Unary.first:type_name -> Operand
	13, // 26: Binary.first:type_name -> Operand
	13, // 27: Binary.second:type_name -> Operand
	14, // 28: Operand.list:type_name -> List
	2,  // 29: OrderBy.direction:type_name -> OrderBy.Direction
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_proto_ssql_proto_init() }
func file_proto_ssql_proto_init() {
	if File_proto_ssql_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_ssql_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ssql_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Function); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ssql_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ssql_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*From); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ssql_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Expr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ssql_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ssql_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tuple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ssql_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ssql_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ssql_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Binary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ssql_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ssql_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ssql_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_ssql_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Function_Double)(nil),
		(*Function_Int)(nil),
	}
	file_proto_ssql_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Expr_Or)(nil),
		(*Expr_Tuple)(nil),
	}
	file_proto_ssql_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Tuple_Nested)(nil),
		(*Tuple_Timeframe)(nil),
		(*Tuple_Key)(nil),
		(*Tuple_Between)(nil),
		(*Tuple_Contain)(nil),
		(*Tuple_Exist)(nil),
		(*Tuple_Eq)(nil),
		(*Tuple_Neq)(nil),
		(*Tuple_Gt)(nil),
		(*Tuple_Ge)(nil),
		(*Tuple_Lt)(nil),
		(*Tuple_Le)(nil),
		(*Tuple_In)(nil),
	}
	file_proto_ssql_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*Operand_Double)(nil),
		(*Operand_Int)(nil),
		(*Operand_Text)(nil),
		(*Operand_List)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_ssql_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_ssql_proto_goTypes,
		DependencyIndexes: file_proto_ssql_proto_depIdxs,
		EnumInfos:         file_proto_ssql_proto_enumTypes,
		MessageInfos:      file_proto_ssql_proto_msgTypes,
	}.Build()
	File_proto_ssql_proto = out.File
	file_proto_ssql_proto_rawDesc = nil
	file_proto_ssql_proto_goTypes = nil
	file_proto_ssql_proto_depIdxs = nil
}
